<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.quantchi.termInfo.mapper.StandInfoMapper">

  <select id="selectListCategory" resultType="java.util.Map">
    SELECT
    a.id AS id,
    a.name AS name,
    a.parent_id AS parentId,
    a.domainId AS domainId,
    a.level AS levels
    FROM standard_category_info a
  </select>

  <select id="selectList" resultType="java.util.Map">
    select
    a.id AS id,
    a.entity_id AS entityId,
    ifnull(a.entity_name,'') AS entityName,
    ifnull(a.entity_desc,'') AS entityDesc,
    ifnull(a.entity_alias,'') AS entityAlias,
    ifnull(a.entity_category,'') AS entityCategory,
    ifnull(a.entity_domain_id,'') AS entityDomainId,
    ifnull(a.standard_level,'') AS standardLevel,
    ifnull(a.business_definition,'') AS businessDefinition,
    ifnull(a.according,'') AS according,
    ifnull(a.def_principle,'') AS defPrinciple,
    ifnull(a.supervision,'') AS supervision,
    ifnull(a.entity_type,'') AS entityType,
    ifnull(a.data_type,'') AS dataType,
    ifnull(a.data_length,'') AS datalength,
    ifnull(a.data_pattern,'') AS dataPattern,
    ifnull(a.data_unit,'') AS dataUnit,
    ifnull(a.data_area,'') AS dataArea,
    ifnull(a.data_precision,'') AS dataPrecision,
    ifnull(a.udc_rule_name,'') AS udcRuleName,
    ifnull(a.udc_code,'') AS udcCode,
    ifnull(a.udc_principle,'') AS udcPrinciple,
    ifnull(a.business_rule,'') AS businessRule,
    ifnull(a.technique_rule,'') AS techniqueRule,
    ifnull(a.oral_technique_rule,'') AS oralTechniqueRule,
    ifnull(a.system_from,'') AS systemFrom,
    ifnull(a.system_used,'') AS systemUsed,
    ifnull(a.display_type,'') AS displayType,
    ifnull(a.logic_type,'') AS logicType,
    ifnull(a.frequency,'') AS frequency,
    ifnull(a.control_dept,'') AS controlDept,
    ifnull(a.co_sector,'') AS coSector,
    ifnull(a.entity_status,'') AS entityStatus,
    ifnull(a.effective_time,'') AS effectiveTime,
    ifnull(a.offline_time,'') AS offlineTime,
    ifnull(a.remark,'') AS remark,
    ifnull(a.version,'') AS version,
    ifnull(a.checking_rule,'') AS checkingRule,
    ifnull(a.data_category,'') AS dataCategory,
    ifnull(a.standard_system,'') AS standardSystem,
    ifnull(c.entity_desc,'') AS termEntityDesc,
    ifnull(c.entity_id,'') AS termEntityId
    from standard_main_info a
    left join term_standard_relation b on b.standard_id = a.entity_id
    left JOIN term_main_info c on c.entity_id = b.entity_id
    <where>
      <if test="entityName !=null and entityName.toString().length()>0">
        a.entity_name LIKE CONCAT(CONCAT('%',#{entityName}), '%')
        or a.entity_desc LIKE CONCAT(CONCAT('%',#{entityName}), '%')
      </if>
      <if test="entityId !=null and entityId.toString().length()>0">
        and a.entity_id = #{entityId}
      </if>
      <if test="entityCategory !=null and entityCategory.toString().length()>0">
        and a.entity_category in (${entityCategory})
      </if>
      <if test="entityDomainId !=null and entityDomainId.toString().length()>0">
        and a.entity_domain_id = #{entityDomainId}
      </if>
      <if test="entityType !=null and entityType.toString().length()>0">
        and a.entity_type = #{entityType}
      </if>
    </where>
  </select>

  <select id="selectThreeId" resultType="java.util.Map">
    SELECT * FROM standard_category_info where parent_id in (${id})
  </select>
  <select id="selectCodeDefinition" resultType="java.util.Map">
    select
    id,
    ifnull(udc_rule_name,'') AS udcRuleName,
    ifnull(udc_code,'') AS udcCode,
    ifnull(udc_value,'') AS udcValue,
    ifnull(udc_desc,'') AS udcDesc
    from sys_udc
    <where>
      <if test="id!=null and id.toString().length()>0">
        id = #{id}
      </if>
      <if test="udcCode!=null and udcCode.toString().length()>0">
        udc_code = #{udcCode}
      </if>
    </where>
  </select>
  <select id="selectMetric" resultType="java.util.Map">
   SELECT
    a.id AS id,
    a.entity_id AS entityId,
    ifnull(a.entity_name,'') AS entityName,
    ifnull(a.entity_desc,'') AS entityDesc,
    ifnull(a.entity_alias,'') AS entityAlias,
    ifnull(a.entity_category,'') AS entityCategory,
    ifnull(a.entity_domain_id,'') AS entityDomainId,
    ifnull(a.standard_level,'') AS standardLevel,
    ifnull(a.business_definition,'') AS businessDefinition,
    ifnull(a.according,'') AS according,
    ifnull(a.def_principle,'') AS defPrinciple,
    ifnull(a.supervision,'') AS supervision,
    ifnull(a.entity_type,'') AS entityType,
    ifnull(a.data_type,'') AS dataType,
    ifnull(a.data_length,'') AS datalength,
    ifnull(a.data_pattern,'') AS dataPattern,
    ifnull(a.data_unit,'') AS dataUnit,
    ifnull(a.data_area,'') AS dataArea,
    ifnull(a.data_precision,'') AS dataPrecision,
    ifnull(a.udc_rule_name,'') AS udcRuleName,
    ifnull(a.udc_code,'') AS udcCode,
    ifnull(a.udc_principle,'') AS udcPrinciple,
    ifnull(a.business_rule,'') AS businessRule,
    ifnull(a.technique_rule,'') AS techniqueRule,
    ifnull(a.oral_technique_rule,'') AS oralTechniqueRule,
    ifnull(a.system_from,'') AS systemFrom,
    ifnull(a.system_used,'') AS systemUsed,
    ifnull(a.display_type,'') AS displayType,
    ifnull(a.logic_type,'') AS logicType,
    ifnull(a.frequency,'') AS frequency,
    ifnull(a.control_dept,'') AS controlDept,
    ifnull(a.co_sector,'') AS coSector,
    ifnull(a.entity_status,'') AS entityStatus,
    ifnull(a.effective_time,'') AS effectiveTime,
    ifnull(a.offline_time,'') AS offlineTime,
    ifnull(a.remark,'') AS remark,
    ifnull(a.version,'') AS version,
    ifnull(a.checking_rule,'') AS checkingRule,
    ifnull(a.data_category,'') AS dataCategory,
    ifnull(c.entity_desc,'') AS termEntityDesc,
    ifnull(c.entity_id,'') AS termEntityId
    from term_main_info a
    left join term_standard_relation b on a.entity_id = b.entity_id
    left JOIN standard_main_info c on c.entity_id = b.standard_id
    <where>
      <if test="entityName !=null and entityName.toString().length()>0">
        a.entity_name LIKE CONCAT(CONCAT('%',#{entityName}), '%')
        or a.entity_desc LIKE CONCAT(CONCAT('%',#{entityName}), '%')
      </if>
      <if test="entityId !=null and entityId.toString().length()>0">
        and a.entity_id = #{entityId}
      </if>
      <if test="entityDomainId !=null and entityDomainId.toString().length()>0">
        and a.entity_domain_id = #{entityDomainId}
      </if>
    </where>
  </select>
  <select id="selectBusiness" resultType="java.util.Map">
   select
   id,
   ifnull(business_type_id,'') AS businessTypeId,
   ifnull(business_type_name,'')AS businessTypeName,
   ifnull(domain_id,'') AS domainId,
   ifnull(domain_name,'') AS domainName,
   ifnull(domain_desc,'') AS domainDesc,
   ifnull(logic_table_id,'') AS logicTableId,
   ifnull(logic_table_name,'') AS logicTableName,
   ifnull(table_name,'') AS tableName,
   ifnull(logic_entity,'') AS logicEntity
   from md_domain_info
  </select>

  <select id="selectPhysicalProperty" resultType="java.util.Map">
   select
   a.field_id AS fieldId,
   a.entity_id AS entityId,
   b.physical_table AS physicalTable,
   b.physical_db AS physicalDb,
   b.physical_field AS physicalField
   from term_field_relation a
   LEFT  JOIN md_physical_field_info b ON a.field_id = b.entity_id
   where  a.entity_id =#{entityId}
  </select>
</mapper>
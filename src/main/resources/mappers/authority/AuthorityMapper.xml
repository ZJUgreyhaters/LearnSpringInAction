<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.quantchi.authority.mapper.AuthorityMapper">
  <select id="selectAuth" resultType="Map">
    select
    tauthority.l_authid,
    tauthority.c_authname,
    tauthority.c_isenable,
    DATE_FORMAT(tauthority.d_createdate,"%Y-%m-%d") d_createdate ,
    tauthority.c_authtype,
    case when t.l_authid is null and t2.l_authid is null and t3.l_authid is null  then '0'
    when  t2.l_authid is null and t3.l_authid is null  then '1'
    when t.l_authid is null  and t3.l_authid is null then '2'
    when t.l_authid is null and t2.l_authid is null  then '3' end  as l_datatype
    from tauthority
    left join (select l_authid from  tauthtablerela   group by l_authid ) t on tauthority.l_authid = t.l_authid
    left join (select l_authid from  tauthcolrela  group by l_authid ) t2 on tauthority.l_authid = t2.l_authid
    left join (select l_authid from  tauthlinerela group by l_authid )  t3 on tauthority.l_authid = t3.l_authid
    order by tauthority.l_authid desc
  </select>
  <select id="getAuthByFilter" resultType="Map" parameterType="map" >
    select
    a.l_authid,
    a.c_authname,
    a.c_isenable,
    DATE_FORMAT(a.d_createdate,"%Y-%m-%d") d_createdate ,
    a.c_authtype,
    case when t.l_authid is null and t2.l_authid is null and t3.l_authid is null  then '0'
    when  t2.l_authid is null and t3.l_authid is null  then '1'
    when t.l_authid is null  and t3.l_authid is null then '2'
    when t.l_authid is null and t2.l_authid is null  then '3' end  as l_datatype
    from tauthority a
    left join (select l_authid from  tauthtablerela  group by l_authid ) t on a.l_authid = t.l_authid
    left join (select l_authid from  tauthcolrela  group by l_authid ) t2 on a.l_authid = t2.l_authid
    left join (select l_authid from  tauthlinerela group by l_authid )  t3 on a.l_authid = t3.l_authid
    where 1=1
    <if test="l_authid != null and l_authid>0">
     and  a.l_authid= #{l_authid}
    </if>
    <if test="c_authname != null and c_authname.toString().length()>0">
      and  a.c_authname like CONCAT(CONCAT('%',#{c_authname}), '%')
    </if>
    <if test="c_authtype != null and c_authtype.toString().length()>0">
      and  a.c_authtype = #{c_authtype}
    </if>
    <if test="l_funcdetailid != null and l_funcdetailid.toString().length()>0">
      and  a.l_authid in (select l_authid from tauthfuncrela where l_funcdetail= #{l_funcdetailid} )
    </if>
    order by a.l_authid desc
  </select>

  <select id="getAuthByAuthId" parameterType="java.lang.Integer" resultType="map">
    select
    tauthority.l_authid,
    tauthority.c_authname,
    tauthority.c_isenable,
    DATE_FORMAT(tauthority.d_createdate,"%Y-%m-%d") d_createdate ,
    tauthority.c_authtype,
    case when t.l_authid is null and t2.l_authid is null and t3.l_authid is null  then '0'
    when  t2.l_authid is null and t3.l_authid is null  then '1'
    when t.l_authid is null  and t3.l_authid is null then '2'
    when t.l_authid is null and t2.l_authid is null  then '3' end  as l_datatype
    from tauthority
   left join (select l_authid from  tauthtablerela   group by l_authid ) t on tauthority.l_authid = t.l_authid
    left join (select l_authid from  tauthcolrela  group by l_authid ) t2 on tauthority.l_authid = t2.l_authid
    left join (select l_authid from  tauthlinerela group by l_authid )  t3 on tauthority.l_authid = t3.l_authid
    where  tauthority.l_authid= #{authid,jdbcType=INTEGER}
  </select>

  <insert id="insertAuth" parameterType="map"
          useGeneratedKeys="true" keyProperty="l_authid">
  INSERT INTO tauthority (c_authname,c_isenable,c_authtype,d_createdate)
  VALUES (#{c_authname}, #{c_isenable}, #{c_authtype},CURDATE())
  </insert>

  <insert id="inertAuthRoleRela" parameterType="map" >
   insert into tauthrolerela(l_roleid,l_authid)
    values (#{l_roleid},#{l_authid})
  </insert>

  <delete id="deleRoleRelaByRoleId" parameterType="java.lang.Integer">
    delete from tauthrolerela where l_roleid=#{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleRoleRelaByRelaId" parameterType="java.lang.Integer">
    delete from tauthrolerela where l_roleauthid=#{relaId,jdbcType=INTEGER}
  </delete>
  <delete id="deleAuth" parameterType="java.lang.Integer">
    delete from tauthority where l_authid=#{authId,jdbcType=INTEGER}
  </delete>

  <delete id="deleRoleRelaByAuthId" parameterType="java.lang.Integer">
    delete from tauthrolerela where l_authid=#{authId,jdbcType=INTEGER}
  </delete>
  <update id="updateAuth" parameterType="map">
    update tauthority set c_authname= #{c_authname},c_isenable=#{c_isenable}
    where l_authid=#{l_authid}
  </update>
</mapper>
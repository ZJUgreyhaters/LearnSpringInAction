<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd



        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!--<import resource="applicationContext-dataSource.xml" />
	<import resource="applicationContext-transaction.xml" />
	<import resource="applicationContext-task.xml" />-->
	<context:component-scan
			base-package="com.quantchi.transport.*" />
	<context:annotation-config/>

	<!-- 将session放入redis -->
	<!--<bean id="redisHttpSessionConfiguration"
		  class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="1800" />
	</bean>-->

	<!-- redis dudus -->
	<!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	</bean>-->

	<!--<bean id="jedisConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.server}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="poolConfig" ref="${redis.poolConfig}" />
		<property name="usePool" value="${redis.usePool}" />
	</bean>-->

	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	<bean id="valueSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="defaultSerializer" ref="stringRedisSerializer"/>
		<property name="keySerializer" ref="stringRedisSerializer"/>
		<property name="valueSerializer" ref="valueSerializer"/>
	</bean>

	<bean name="messageSource"
		  class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<bean name="jacksonMessageConverter"
		  class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!--<bean id="httpSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
		<constructor-arg index="0" value="${solr.url}"/>
		&lt;!&ndash; 设置响应解析器   &ndash;&gt;
		<property name="parser">
			<bean class="org.apache.solr.client.solrj.impl.XMLResponseParser"/>
		</property>
		<property name="connectionTimeout" value="500"/>
	</bean>-->

	<!-- define the SqlSessionFactory -->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:mappers/**/*.xml</value>
			</list>
		</property>
		<property name="typeAliasesPackage" value="cn.xuetao.common.data.entities" />
	</bean>-->


	<!-- production环境  新加入redis的配置 -->
	<beans profile="production">
		<context:property-placeholder location="classpath:app.properties, classpath:redis.properties" />
	</beans>

	<!-- development环境  新加入redis的配置 -->
	<beans profile="development">
		<context:property-placeholder location="classpath:app.properties, classpath:app_dev.properties, classpath:redis.properties" />
	</beans>
</beans>

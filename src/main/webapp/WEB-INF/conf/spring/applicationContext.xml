<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--<import resource="applicationContext-dataSource.xml" />
	<import resource="applicationContext-transaction.xml" />
	<import resource="applicationContext-task.xml" />-->
	<import resource="applicationContext-dataSource.xml" />
	<import resource="applicationContext-hive.xml" />
	<import resource="applicationContext-shiroConfig.xml" />
	<!--<mvc:interceptors>-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/quantchiAPI/*"/>-->
			<!--<bean class="com.quantchi.authority.shiro.UrlInterceptor" />-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->
	<context:component-scan
			base-package="com.quantchi" />
	<context:annotation-config/>
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="fileEncoding" value="UTF-8"/>
		<property name="locations">
			<list>
				<value>classpath:sql_query_config.properties</value>
			</list>
		</property>
	</bean>
	<bean name="messageSource"
		  class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<!--<bean name="jacksonMessageConverter"
		  class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>-->

	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json; charset=UTF-8</value>
				<value>application/x-www-form-urlencoded; charset=UTF-8</value>
			</list>
		</property>
		<property name="objectMapper">
			<bean class="com.fasterxml.jackson.databind.ObjectMapper">
				<property name="serializationInclusion">
					<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="httpSolr" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
		<constructor-arg index="0" value="${solr.url}"/>
		<property name="parser">
			<bean class="org.apache.solr.client.solrj.impl.XMLResponseParser"/>
		</property>
		<property name="connectionTimeout" value="500"/>
	</bean>


	<bean id="MyRoleFilter" class="com.quantchi.authority.shiro.MyRoleFilter" />
	<bean id="DeniyAllFilter" class="com.quantchi.authority.shiro.DeniyAllFilter" />
	<!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->
	<!--<bean id="intelquery" class="com.quantchi.intelquery.intelQuery"></bean>-->

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:mappers/**/*.xml</value>
			</list>
		</property>
		<property name="typeAliasesPackage" value="com.quantchi.metadatamgr.data.entity,com.quantchi.customer.pojo" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!-- config params as the following -->
						<value>
							param1=value1
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.quantchi.termInfo.mapper,com.quantchi.metadatamgr.data.mapper,com.quantchi.customer.mapper,com.quantchi.lineage.mapper,com.quantchi.intelquery.mapper;com.quantchi.authority.mapper" />
	</bean>


    <!-- production环境  新加入redis的配置 -->
	<beans profile="production">
		<context:property-placeholder location="classpath:app.properties" />
	</beans>

	<!-- development环境  新加入redis的配置 -->
	<beans profile="development">
		<context:property-placeholder location="classpath:app.properties" />
	</beans>


</beans>
